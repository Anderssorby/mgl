(in-package :mgl-test)

(defun test-roc-auc ()
  (loop for (input expected)
        in '((((1 . nil))
              (nil nil nil))
             (((1 . nil) (2 . t))
              (1 1 1))
             (((1 . nil) (1 . t))
              (1/2 1 1))
             (((1 . nil) (1 . t) (1 . nil) (1 . nil))
              (1/2 1 3))
             (((1 . t) (1 . nil) (1 . nil))
              (1/2 1 2))
             (((1 . nil) (1 . t) (1 . nil))
              (1/2 1 2))
             (((1 . nil) (1 . nil) (1 . t))
              (1/2 1 2))
             (((1 . nil) (1 . t) (1 . t))
              (1/2 2 1))
             (((1 . t) (1 . nil) (1 . t))
              (1/2 2 1))
             (((1 . t) (1 . t) (1 . nil))
              (1/2 2 1))
             (((1 . nil) (2 . nil) (3 . t))
              (1 1 2))
             (((1 . t) (2 . nil) (3 . nil) (4 . t))
              (1/2 2 2))
             (((1 . t) (2 . nil) (3 . nil) (4 . t) (5 . nil))
              (1/3 2 3))
             (((9 . t) (8 . t) (7 . nil) (6 . t) (5 . nil) (4 . nil))
              (8/9 3 3))
             (((9 . nil) (8 . t) (8 . nil) (8 . nil) (5 . t) (4 . nil))
              (3/8 2 4))
             (((9 . nil) (8 . nil) (8 . t) (8 . t) (5 . t) (4 . nil))
              (4/9 3 3)))
        do (assert (equal (multiple-value-list
                           (roc-auc input #'cdr :key #'car))
                          expected))))

(defun test-classification ()
  (test-roc-auc))
